{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>Redovisning</h1>
    <p class="author">Skriven 2023-04-05 av Julia Nilsson</p>
    <div class="kmom-links">
        <a href="#kmom01">KMOM01</a>
        <a href="#kmom02">KMOM02</a>
        <a href="#kmom03">KMOM03</a>
        <a href="#kmom04">KMOM04</a>
        <a href="#kmom05">KMOM05</a>
        <a href="#kmom06">KMOM06</a>
    </div>
    <a id="kmom01"></a>
    <h3>Kmom01</h3>
    <p>Mina förkunskaper inom objektorientering kommer egentligen endast från kursen objektorienterad python, som jag läste nu i början av året. 
    Så det är inga överdrivna förkunskaper jag kommer med men jag tror ändå att det kommer att lösa sig ganska bra med tiden.<br><br>
    Grunderna inom objektorienterad PHP är väll egentligen att man jobbar med objekt och klasser. Ett objekt skapar man med hjälp av en klass, klassen blir som 
    en mall för objektet som kallas en instans av klassen. Ett objekt består av såkallade medlemsvariabler och av metoder. Det är i medlemsvariablerna som objektets status lagras, 
    alltså ett värde. För att kunna jobba med objektet på olika sätt använder man sig av dess metoder. Dessa representerar de saker som ett objekt kan användas till, 
    alltså de ett objekt kan göra.<br><br>
    Jag uppfattar kodbasen och dess struktur hyfsat enkel och lättnavigerad. Sen kan det alltid känns lite överväldigande att ha så många filer i ett projekt, men det tror jag att jag kommer 
    vänja mig vid ganska snabbt. Behöver mest bli bekväm med att hitta i de olika mapparna och navigera till olika ställen.<br><br>
    Jag tyckte att det var lite extra intressant att läsa om olika typer av utveckling och testning, som exempelvis vad skillnaden på test driven och beteende driven utveckling är och på vilket sätt man 
    bör testa dessa olika typer av utveckling. Så testning i allmänhet ser jag fram emot att lära mig mera om då jag anser att de är en process som till stor del påverkar kvaliten på ens kod.<br><br>
    För detta kmom är min TIL hur man sätter upp ett prjekt med hjälp av symfony. Det tog några försök för mig för att få allting på plats men nu känner jag att jag har hyfsat bra koll på grunderna och 
    de olika komponenterna i kodbasen.</p>
    <br>
    <a id="kmom02"></a>
    <h3>Kmom02</h3>
    <p>Arv är när en klass ärver egenskaper och metoder från en annan klass, det blir som en förälder och ett barn. I barn-klassen kan man komma åt alla metoder och variabler som finns i föräldrar-klassen, men man kan även lägga till och förändra metoder och variabler. 
    Komposition är när en klass existerar i en annan klass. Exempelvis om man har en blom-klass så kan man även ha en blombucket-klass. Blombucket-objektet består av blom-objekt. 
    Interface handlar om att säkerställa att vissa metoder finns i flera klasser. Ett löfte om att en klass ska innehålla ett visst interface(en eller flera metoder), då vet man att man kommer att kunna göra vissa saker eller behandla den klassen på ett visst sätt. 
    Trait är ganska likt arv. PHP har inte stöd för multipelt-arv, alltså att en klass ärver från frlera basklasser. Man kan istället i PHP jobba med trait. Detta är något man "kopierar" in i sin klass och som kan användas i flera klasser. Du kan även kopiera in flera traits i en och samma klass. Trait kan vara bra om man har metoder eller liknande som man vill använda i flera klasser, för skulle man behöva förändra metoden behöver man bara göra detta 
    på ett ställa.<br><br>
    Jag tyckte att denna uppgift var väldigt överväldigande. Det var lite för många olika saker att sätta sig in i på en gång enligt mig. Så nu i slutändan är jag inte helt nöjd men jag hoppas 
    på att majoriteten av de som jag gjort fungerar som det är tänkt. Jag försökte att jobba med de uppgfiter och kodexempel som fanns och anpassa dessa för att funka så som jag önskade. Jag tror att jag fick ganska bra ordning på mina klasser till slut och att jag lyckades med arv och kompositioner. Men jag tar gärna emot feedback 
    på hur de hade kunnat göra på ett ännu bättre sätt. När jag fått ordning på klasserna så gjorde jag en enkel styling på korten då jag inte hade tid att sitta med detta allt för länge. Jag la istället tid på att försöka få ordning på sessionen, vilket jag tror gick sådär. Men tillslut fick jag iallafall ihop allting och hoppas på att alla delar fungera som det är tänkt. 
    Sen tänker jag även att jag i nästa kursmoment ska jobba vidare med mina klasser och även stylingen på mina kort.<br><br>
    Såhär långt så tycker jag att arbetet i symfony flyter på bra och utan några större problem. Jag känner igen mig ganska väl i allting från tidigare kurser osv. Sen har jag inte helt kommit in i hur man sätter upp sitt projekt bäst osv, men jag tänker att de kommer emd tiden.<br><br>
    För detta kmom är min TIL hur man jobbar med arv mellan klasser i objektorienterad php. Jag känner igen ganska mycket från oopython kursen, men det är självklart ändå mycket som är nytt och annorlunda. Jag ser fram emot att jobba vidare med mina klasser och finslipa de ytterligare i nästa kursmoment.</p>
    <br>
    <a id="kmom03"></a>
    <h3>Kmom03</h3>
    <p></p>
    <br>
    <a id="kmom04"></a>
    <h3>Kmom04</h3>
    <p></p>
    <br>
    <a id="kmom05"></a>
    <h3>Kmom05</h3>
    <p></p>
    <br>
    <a id="kmom06"></a>
    <h3>Kmom06</h3>
    <p></p>
{% endblock %}